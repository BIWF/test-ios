# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself


# update_fastlane

#default_platform(:ios)

#platform :ios do
#  desc "Description of what the lane does"
#  lane :custom_lane do
#    # add actions here: https://docs.fastlane.tools/actions
#  end
#end

default_platform :ios
 
platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end
 
  desc "Runs all the tests"
  lane :test do
    scan
  end
 
  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(scheme: "MetricsApp") # Build your app - more options available
    pilot
 
    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end
 
  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "MetricsApp") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

desc “Archive and Build IPA”
      lane :i do
       #install_pods
       #increment_build
 
gym(scheme: 'MetricsApp', project: "MetricsApp.xcodeproj", clean: true, silent: true, include_bitcode: false, export_method: 'ad-hoc',output_directory: "/Users/santhosh.kumar/Documents/Backup")
       end

 desc "Description of what the lane does"
  lane :CI do
      run_tests(project: "MetricsApp.xcodeproj",
      devices: ["iPhone 6s"],
      scheme: "MetricsApp")
  end
 
  lane :CD do |values|
 
    gym(scheme: 'MetricsApp', project: "MetricsApp.xcodeproj", clean: true, silent: true, include_bitcode: false, export_method: 'ad-hoc')
 
    emails = values[:test_email] ? values[:test_email] : ['[santhosh.r.kumar@centurylink.com]'] # You can list more emails here
    groups = values[:test_email] ? nil : nil # You can define groups on the web and reference them here
 
    #crashlytics(api_token: '[CRASHLYTICS_API_TOKEN]',
    #         build_secret: '[CRASHLYTICS_ORG_SECRET]',
    #               emails: emails,
    #               groups: groups,
    #                notes: 'Distributed with fastlane', # Check out the #changelog_from_git_commits action
 #           notifications: true) # Should this distribution notify your testers via #email?
 
    end
  # You can define as many lanes as you want
 
  after_all do |lane|
    # This block is called, only if the executed lane was successful
 
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end
 
  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
 
 
# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions
 
# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
